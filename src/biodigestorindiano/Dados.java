package biodigestorindiano;

/**
 *
 * @author WELL1NGTON
 */
public class Dados extends javax.swing.JFrame {

    final int numTextField = 6, numEntBatelada = 2;
    javax.swing.JTextField[] entradas, entBatelada;
    javax.swing.JLabel[] lbBatelada;
    /**
     * Creates new form Principal
     */
    public Dados() {
        initComponents();
        inicializaVetEntradas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jTextField15 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jTextField16 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jTextField17 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Otimização de Biodigestores Indianos");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setPreferredSize(new java.awt.Dimension(950, 500));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados"));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 300));

        jButton1.setText("Executar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Fechar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Tipo de resíduo:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Suíno (K = 3)", "Galinhas Poedeiras (K = 1,5)", "Gado de corte (K = 4,5)", "Gado leiteiro (K = 6)", "Exemplo (K = 2,5)" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Número de pessoas que irão cozinhar:");

        jLabel15.setText("Número de lampiões:");

        jTextField14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField14ActionPerformed(evt);
            }
        });

        jLabel16.setText("Tempo [horas] de uso dos lampiões:");

        jLabel17.setText("Número de pessoas que usarão o chuveiro:");

        jButton3.setText("Exemplo");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Horários de uso dos equipamentos");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel18.setText("Frequência [dias] de retirada dos residuos:");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Motores"));
        jPanel2.setPreferredSize(new java.awt.Dimension(275, 80));

        jLabel2.setText("Quantidade:");

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        jSpinner1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner1StateChanged(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Potência (HP)", "Horas de uso"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel4.setText("Pressão máxima [m.c.a] =  ");

        jTextField1.setName(""); // NOI18N

        jLabel5.setText("Tipo de biodigestor:");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Indiano", "Chinês", "Batelada" }));
        jComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox2ItemStateChanged(evt);
            }
        });

        jLabel6.setText("PUF [dias]:");

        jLabel7.setText("PEP [dias]:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jButton3)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2)
                                .addGap(18, 18, 18)
                                .addComponent(jButton4))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel4))
                                .addGap(6, 6, 6)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel6))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jLabel7))
                                        .addComponent(jTextField1)
                                        .addComponent(jTextField17)
                                        .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 391, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)
                            .addComponent(jButton4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addGap(0, 23, Short.MAX_VALUE))))
        );

        jMenu2.setText("Ajuda");

        jMenuItem2.setText("Como Utilizar");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuItem1.setText("Sobre");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 925, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void inicializaVetEntradas(){
        //Entradas padrão
        entradas = new javax.swing.JTextField[numTextField];
        entradas[0] = jTextField17; //Frequência (dias) de retirada dos resíduos
        entradas[1] = jTextField2;  //Número de pessoas que usarão o biogás
        entradas[2] = jTextField14; //Número de lampiões
        entradas[3] = jTextField15; //Tempo (horas) de uso dos lampiões
        entradas[4] = jTextField16; //Número de chuveiros
        entradas[5] = jTextField1;  //Pressão máxima
        
        //Labels Batelada
        lbBatelada = new javax.swing.JLabel[numEntBatelada] ;
        (lbBatelada[0] = jLabel6).setVisible(false);
        (lbBatelada[1] = jLabel7).setVisible(false);
        
        //Entradas Batelada
        entBatelada = new javax.swing.JTextField[2];
        (entBatelada[0] = jTextField3).setVisible(false);
        (entBatelada[1] = jTextField4).setVisible(false);
    }
    
    private void entradasTeste(){
        jComboBox1.setSelectedIndex(4);
        entradas[0].setText("50");
        entradas[1].setText("5");
        jSpinner1.setValue(1);
        atualiza_tabela();
        javax.swing.table.TableModel modelo = jTable1.getModel();
        modelo.setValueAt(5,0,0);
        modelo.setValueAt(1,0,1);
        entradas[2].setText("6");
        entradas[3].setText("4");
        entradas[4].setText("5");
        entradas[5].setText("0.15");
    }
    
    private void jTextField14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField14ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField14ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        double[] valores = new double[numTextField], valBatelada = new double[numEntBatelada]; //valBatelada - PUF e PEP - Batelada
        boolean test = true;
        int opcao = jComboBox2.getSelectedIndex();
        
        //Leitura das caixas de texto padrão
        for(int i = 0; i < numTextField && test; i++){
            try {
                if(entradas[i].getText().isEmpty())
                {
                    valores[i] = 0;
                    entradas[i].setText("0");
                }
                else
                {
                    valores[i] = Double.parseDouble(entradas[i].getText());
                    
                    if(valores[i] < 0)
                    {
                        test = false;
                        entradas[i].requestFocus();
                    }
                }
            } catch (NumberFormatException e) {
                test = false;
                entradas[i].requestFocus();
            }
        }
        
        if(valores[0] == 0)
        {
            test = false;
            entradas[0].requestFocus();
        }
        
        //Leitura das caixas de texto exclusivas do modelo Batelada
        if(opcao == 2 && test)
        {
            for(int i = 0; i < numEntBatelada && test; i++){
                try {
                    if(entBatelada[i].getText().isEmpty())
                    {
                        valBatelada[i] = 0;
                        test = false;
                        entBatelada[i].setText("0");
                        entBatelada[i].requestFocus();
                    }
                    else
                    {
                        valBatelada[i] = Double.parseDouble(entBatelada[i].getText());
                        
                        if(valBatelada[i] <= 0)
                        {
                            test = false;
                            entBatelada[i].requestFocus();
                        }
                    }
                } catch (NumberFormatException e) {
                    test = false;
                    entBatelada[i].requestFocus();
                }
            }
        }

        //Leitura da tabela de motores
        int numLinhas = Integer.parseInt(jSpinner1.getValue().toString());
        final javax.swing.table.TableModel modelo =  jTable1.getModel(); //Tabela de motores
        double[][] matriz = new double[Integer.parseInt(jSpinner1.getValue().toString())][2]; //Matriz para os valores da tabela de motores
        
        for(int i = 0; i < numLinhas && test; i++){
            try {
                if(modelo.getValueAt(i, 0) == null)
                {
                    matriz[i][0] = 0;
                    modelo.setValueAt(0, i, 0);
                }
                else
                    matriz[i][0] = Double.parseDouble(modelo.getValueAt(i, 0).toString());

                if(modelo.getValueAt(i, 1) == null)
                {
                    matriz[i][1] = 0;
                    modelo.setValueAt(0, i, 1);
                }
                else
                    matriz[i][1] = Double.parseDouble(modelo.getValueAt(i, 1).toString());
                
                if(matriz[i][0] < 0 || matriz[i][1] < 0)
                {
                    test = false;
                    jTable1.setRowSelectionInterval(i, i);
                }
            } catch (NumberFormatException e) {
                test = false;
            }
        }
        
        //Se as entradas estão corretas, calcular o consumo diário de biogás
        if(test){
            final short COZIMENTO = 0, MOTOR = 1, ILUMINACAO = 2, BANHO = 3;
            double cozimentoTotal, motorTotal, iluminacaoTotal, banhoTotal, B;
            double[] vetConsumo = new double[] { 0.42, 0.45, 0.08, 0.74 }; //cozimento, motor, iluminação, banho
            
            cozimentoTotal = vetConsumo[COZIMENTO] * valores[1];
            iluminacaoTotal = vetConsumo[ILUMINACAO] * valores[2] * valores[3];
            banhoTotal = vetConsumo[BANHO] * valores[4];
            motorTotal = 0;
            
            for(int i = 0; i < Integer.parseInt(jSpinner1.getValue().toString()); i++)
                motorTotal += vetConsumo[MOTOR] * matriz[i][0] * matriz[i][1];               
            
            B = cozimentoTotal + motorTotal + iluminacaoTotal + banhoTotal;
            
            //Se houver consumo, calcular as dimensões
            if(B != 0){
                double K, Vb, producaoHoraria;
                double[] vetK = new double[] {3, 1.5, 4.5, 6, 2.5}; //suíno, galinhas poedeiras, gado de corte, gado leiteiro, exemplo
                
                K = vetK[jComboBox1.getSelectedIndex()];
                Vb = K * B;            
                producaoHoraria = B / 24;

                //Se a tabela de horários foi preenchida, calcula volume útil do gasômetro
                if(tabelaHorarios != null){
                    int qtdCozimento, qtdMotor, qtdIluminacao, qtdBanho;
                    double taxaCozimento, taxaMotor, taxaIluminacao, taxaBanho, V2;
                    
                    qtdCozimento = 0;
                    qtdMotor = 0;
                    qtdIluminacao = 0;
                    qtdBanho = 0;

                    for (int[] tabelaHorario : tabelaHorarios) {
                        qtdCozimento += tabelaHorario[5];
                        qtdMotor += tabelaHorario[2];
                        qtdBanho += tabelaHorario[3];
                        qtdIluminacao += tabelaHorario[4];
                    }

                    if(qtdCozimento != 0)
                        taxaCozimento = cozimentoTotal / qtdCozimento;
                    else
                        taxaCozimento = 0;
                    if(qtdMotor != 0)
                        taxaMotor = motorTotal / qtdMotor;
                    else
                        taxaMotor = 0;
                    if(qtdIluminacao != 0)
                        taxaIluminacao = iluminacaoTotal / qtdIluminacao;
                    else
                        taxaIluminacao = 0;
                    if(qtdBanho != 0)
                        taxaBanho = banhoTotal / qtdBanho;
                    else
                        taxaBanho = 0;

                    final short INTERVALO = 0, ACUMULADO = 1, PRODUCAO = 2, CONSUMO = 3, TOTAL = 4;
                    double[][] quadroProducao = new double[tabelaHorarios.length][5];
                    /*
                        A: Volume que deve estar armazenado no início de cada período
                        Z: Volume que deverá ser armazendado no fim do período
                    */
                    double maiorA = 0, maiorZ = 0; 
                    
                    for(int i = 0; i < tabelaHorarios.length; i++){
                        if(tabelaHorarios[i][0] > tabelaHorarios[i][1])
                            quadroProducao[i][INTERVALO] = tabelaHorarios[i][1] + (24 - tabelaHorarios[i][0]);
                        else
                            quadroProducao[i][INTERVALO] = tabelaHorarios[i][1] - tabelaHorarios[i][0];

                        quadroProducao[i][PRODUCAO] = producaoHoraria * quadroProducao[i][0];
                        quadroProducao[i][CONSUMO]  = taxaCozimento * tabelaHorarios[i][5] +
                                                      taxaMotor * tabelaHorarios[i][2] +
                                                      taxaIluminacao * tabelaHorarios[i][4] +
                                                      taxaBanho * tabelaHorarios[i][3];

                        if(quadroProducao[i][CONSUMO] - quadroProducao[i][PRODUCAO] > maiorA)
                            maiorA = quadroProducao[i][CONSUMO] - quadroProducao[i][PRODUCAO];
                        
                        if(quadroProducao[i][PRODUCAO] - quadroProducao[i][CONSUMO] > maiorZ)
                            maiorZ = quadroProducao[i][PRODUCAO] - quadroProducao[i][CONSUMO];                        
                    }
                    
                    double maiorVolume = (maiorA >= maiorZ) ? maiorA : maiorZ, menorTotal = B + 1;
                    
                    quadroProducao[0][ACUMULADO] = 0;
                    quadroProducao[0][TOTAL] = quadroProducao[0][PRODUCAO] - quadroProducao[0][CONSUMO];
                    
                    for(int i = 1; i < tabelaHorarios.length; i++){
                        quadroProducao[i][ACUMULADO] = (quadroProducao[i - 1][TOTAL] < maiorVolume) ? quadroProducao[i - 1][TOTAL] : maiorVolume;
                        quadroProducao[i][TOTAL] = quadroProducao[i][ACUMULADO] + quadroProducao[i][PRODUCAO] - quadroProducao[i][CONSUMO];
                        if( quadroProducao[i][TOTAL] < menorTotal)
                            menorTotal = quadroProducao[i][TOTAL];
                    }
                    
                    V2 = maiorVolume;
                    if(menorTotal < 0)
                        V2 -= menorTotal;
                    
                    //Calcula Di e H
                    Biodigestor biodig;
                    
                    switch( opcao )
                    {
                        case 0:
                            biodig = new Indiano(Vb, valores[0], valores[5], V2);
                            break;
                        case 1:
                            biodig = new Chines(Vb, valores[0], valores[5], V2);
                            break;
                        case 2:
                            biodig = new Batelada();
                            break;
                        default:
                            biodig = new Indiano(Vb, valores[0], valores[5], V2);
                    }
                    
                    OtimizaBiodigestor.setBiodigesotor(biodig);
                    OtimizaBiodigestor.setMi(0.0001); 
                    OtimizaBiodigestor.executaOtimizacao();                    

                    //Exibe formulário com os resultados
                    if(resultados == null)
                    {
                        resultados = new Resultados();
                        resultados.janelaDados = this;
                        resultados.setLocationRelativeTo(null);
                    }
                    
                    int numParam = biodig.params.length, i;
                    
                    for(i = 0; i < numParam; i++)
                    {
                        resultados.labelsRotulo[i].setText(biodig.params[i].getRotulo());
                        resultados.labelsResult[i].setText(biodig.params[i].getValorFormatado());
                    }
                    
                    for( ; i < resultados.labelsRotulo.length ; i++)
                    {
                        resultados.labelsRotulo[i].setText("");
                        resultados.labelsResult[i].setText("");
                    }
                    
                    resultados.setVisible(true);

                }
                else
                    javax.swing.JOptionPane.showMessageDialog(null, "Por favor, preencha também os horários das tarefas que utilizam biogás.","Erro de entrada de dados.",javax.swing.JOptionPane.ERROR_MESSAGE);

            }
            else
                javax.swing.JOptionPane.showMessageDialog(null, "Deve haver consumo de biogás para que as dimensões do biodigestor sejam calculadas.","Erro de entrada de dados.",javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        else
            javax.swing.JOptionPane.showMessageDialog(null, "Use apenas números não negativos para preencher os dados e use ponto para separar as casas decimais. \nA frequência de retirada dos resíduos e os dados de PUF e PEP (Batelada) também não podem ser iguais a zero.","Erro de entrada de dados.",javax.swing.JOptionPane.ERROR_MESSAGE);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        entradasTeste();
    }//GEN-LAST:event_jButton3ActionPerformed
    
    Horarios horarios = null;
    Resultados resultados = null;
    int[][] tabelaHorarios = null;
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if(horarios == null)
        {
            horarios = new Horarios();
            horarios.janelaDados = this;
            horarios.setLocationRelativeTo(null);
        }
        setVisible(false); 
        horarios.setVisible(true);    
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed
    
    private void atualiza_tabela(){
        int valor = Integer.parseInt(jSpinner1.getValue().toString());
        /*  
            A conversão abaixo não é totalmente segura e foi mantida apenas
            porque não foi encontrada uma solução mais adequada. Não é possível 
            garantir que o TableModel retornado pela função "getModel()" é um 
            DefaultTableModel. Um erro do tipo ClassCastingException pode 
            ocorrer durante a execução se esse programa for compilado com uma 
            versão diferente do Java daquela escolhida para essa implementação 
            (Java 8)
        */
        javax.swing.table.DefaultTableModel modelo = (javax.swing.table.DefaultTableModel) jTable1.getModel();

        while(jTable1.getRowCount() != valor)
            if(jTable1.getRowCount() < valor)
                modelo.addRow(new Object[] {0,0});
            else
                modelo.removeRow( jTable1.getRowCount() - 1 );
    }
    
    private void jSpinner1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner1StateChanged
        atualiza_tabela();
    }//GEN-LAST:event_jSpinner1StateChanged

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox2ItemStateChanged
        boolean visivel = jComboBox2.getSelectedIndex() == 2;
        
        for(int i = 0; i < numEntBatelada; i++)
        {
            lbBatelada[i].setVisible(visivel);
            entBatelada[i].setVisible(visivel);
        }
    }//GEN-LAST:event_jComboBox2ItemStateChanged
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater( () -> new Dados().setVisible(true) );
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
