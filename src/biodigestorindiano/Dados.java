package biodigestorindiano;

/**
 *
 * @author WELL1NGTON
 */
public class Dados extends javax.swing.JFrame {

    final int numTextField = 5;
    javax.swing.JTextField[] entradas;
    /**
     * Creates new form Principal
     */
    public Dados() {
        initComponents();
        inicializaVetEntradas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jTextField15 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jTextField16 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jTextField17 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Otimização de Biodigestores Indianos");
        setPreferredSize(new java.awt.Dimension(800, 450));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados"));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 300));

        jButton1.setText("Executar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Fechar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Tipo de resíduo =");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1. Suíno (K = 3)", "2. Galinhas Poedeiras (K = 1,5)", "3. Gado de corte (K = 4,5)", "4. Gado leiteiro (K = 6)", "5. Exemplo (K = 2,5)" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Número de pessoas que usarao o biogas =");

        jLabel15.setText("Número de lampiões =");

        jTextField14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField14ActionPerformed(evt);
            }
        });

        jLabel16.setText("Tempo [horas] de uso dos lampiões = ");

        jLabel17.setText("Número de chuveiros =");

        jButton3.setText("Exemplo");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Horários de uso dos equipamentos");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel18.setText("Frequência [dias] de retirada dos residuos =");

        jTextField17.setText("50");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Motores"));

        jLabel2.setText("Quantidade:");

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        jSpinner1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner1StateChanged(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Potência", "Horas de uso diário"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jButton3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17)
                            .addComponent(jLabel1)
                            .addComponent(jLabel18))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jMenu2.setText("Ajuda");

        jMenuItem2.setText("Como Utilizar");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuItem1.setText("Sobre");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 710, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void inicializaVetEntradas(){
        entradas = new javax.swing.JTextField[numTextField];
        entradas[0] = jTextField17; //Frequência (dias) de retirada dos resíduos
        entradas[1] = jTextField2;  //Número de pessoas que usarão o biogás
        entradas[2] = jTextField14; //Número de lampiões
        entradas[3] = jTextField15; //Tempo (horas) de uso dos lampiões
        entradas[4] = jTextField16; //Número de chuveiros
        
    }
    
    private void entradasTeste(){
        jComboBox1.setSelectedIndex(4);
        entradas[0].setText("50");
        entradas[1].setText("5");
        jSpinner1.setValue(1);
        atualiza_tabela();
        javax.swing.table.TableModel modelo = jTable1.getModel();
        modelo.setValueAt(5,0,0);
        modelo.setValueAt(1,0,1);
        entradas[2].setText("6");
        entradas[3].setText("4");
        entradas[4].setText("1");
        
        
    }
    
    private void jTextField14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField14ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField14ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        final int COZIMENTO = 0, MOTOR = 1, ILUMINACAO = 2, BANHO = 3;
        double[] x;
        double[] vetK = new double[] {3, 1.5, 4.5, 6, 2.5};
        double K, B, Vp, Vb, Vr, Vg, V, V1, V2, v, Di, H, Dg, Ds, Db, De, h, h1, h2, a, b, e2, p, esp, E, Pg, r, tensao = 750, n;
        //tensao = tensão de tração adimíssível do material da parede do gasômetro (kgf/cm²)
        double producaoHoraria;
        double cozimentoTotal, motorTotal, iluminacaoTotal, banhoTotal;
        double taxaCozimento, taxaMotor, taxaIluminacao, taxaBanho;
        int qtdCozimento, qtdMotor, qtdIluminacao, qtdBanho;
        double[] vetConsumo = new double[] { 0.42, 0.45, 0.08, 0.74 }; //cozimento,motor,
        boolean test = true;
        //int intervalos;
        double[] valores = new double[numTextField];
        final javax.swing.table.TableModel modelo =  jTable1.getModel(); //Tabela de motores
        double[][] matriz = new double[Integer.parseInt(jSpinner1.getValue().toString())][2]; //Matriz para os valores da tabela de motores
        
        //Leitura das caixas de texto
        for(int i = 0; i < numTextField && test; i++){
            try {
                if(entradas[i].getText().isEmpty())
                    valores[i] = 0;
                else
                    valores[i] = Double.parseDouble(entradas[i].getText());
            } catch (NumberFormatException e) {
                test = false;
                entradas[i].requestFocus();
            }
        }

        //Leitura da tabela de motores
        for(int i = 0; i < Integer.parseInt(jSpinner1.getValue().toString()) && test; i++){
            try {
                if(modelo.getValueAt(i, 0).toString().isEmpty())
                    matriz[i][0] = 0;
                else
                    matriz[i][0] = Double.parseDouble(modelo.getValueAt(i, 0).toString());

                if(modelo.getValueAt(i, 1).toString().isEmpty())
                    matriz[i][1] = 0;
                else
                    matriz[i][1] = Double.parseDouble(modelo.getValueAt(i, 1).toString());
            } catch (NumberFormatException e) {
                test = false;
            }
        }
        
        if(test){
            cozimentoTotal = vetConsumo[COZIMENTO] * valores[1];
            motorTotal = 0;
            
            for(int i = 0; i < Integer.parseInt(jSpinner1.getValue().toString()); i++)
                motorTotal += vetConsumo[MOTOR] * matriz[i][0] * matriz[i][1];
                
            iluminacaoTotal = banhoTotal = 0;
            iluminacaoTotal += vetConsumo[ILUMINACAO] * valores[2] * valores[3];
            banhoTotal += vetConsumo[BANHO] * valores[1];
            
            B = cozimentoTotal + motorTotal + iluminacaoTotal + banhoTotal;
            
            if(B != 0){           
                K = vetK[jComboBox1.getSelectedIndex()];
                V = K * B;
                Vb = V * 1.1;

                OtimizaBiodigestor otimo = new OtimizaBiodigestor();
                otimo.set_Vb(Vb);
                otimo.set_mi(0.0001);
                otimo.set_Prints(false);
                //long inicio = System.currentTimeMillis();
                x = otimo.Executa_Otimizacao();
                //long fim = System.currentTimeMillis();
                //System.out.println(fim - inicio);


                Di = x[0];
                H = x[1];

                producaoHoraria = B / 24;

                if(horarios == null)
                    test = false;
                else{
                    if(tabelaHorarios == null)
                        tabelaHorarios = horarios.getTabela();

                    //intervalos = 0;
                    for(int i = 0; i < tabelaHorarios.length && test; i++){
                        if(tabelaHorarios[i][0] == tabelaHorarios[i][1] && tabelaHorarios.length > 1)
                            test = false;
                        //else
                            //intervalos++;
                    }
                }

                if(test){
                    qtdCozimento=0;
                    qtdMotor=0;
                    qtdIluminacao=0;
                    qtdBanho=0;

                    for(int i = 0; i < tabelaHorarios.length && test; i++){
                        qtdCozimento += tabelaHorarios[i][5];
                        qtdMotor += tabelaHorarios[i][2];
                        qtdBanho += tabelaHorarios[i][3];
                        qtdIluminacao += tabelaHorarios[i][4];
                    }

                    if(qtdCozimento != 0)
                        taxaCozimento = cozimentoTotal / qtdCozimento;
                    else
                        taxaCozimento = 0;
                    if(qtdMotor != 0)
                        taxaMotor = motorTotal / qtdMotor;
                    else
                        taxaMotor = 0;
                    if(qtdIluminacao != 0)
                        taxaIluminacao = iluminacaoTotal / qtdIluminacao;
                    else
                        taxaIluminacao = 0;
                    if(qtdBanho != 0)
                        taxaBanho = banhoTotal / qtdBanho;
                    else
                        taxaBanho = 0;

                    double[][] quadroProducao = new double[tabelaHorarios.length][5];
                    for(int i = 0; i < tabelaHorarios.length; i++){
                        if(tabelaHorarios[i][0] > tabelaHorarios[i][1])
                            quadroProducao[i][0] = tabelaHorarios[i][1]+(24 - tabelaHorarios[i][0]);
                        else
                            quadroProducao[i][0] = tabelaHorarios[i][1]-tabelaHorarios[i][0];

                        quadroProducao[i][2] = producaoHoraria*quadroProducao[i][0];
                        quadroProducao[i][3] = taxaCozimento*tabelaHorarios[i][5] +
                                               taxaMotor*tabelaHorarios[i][2] +
                                               taxaIluminacao*tabelaHorarios[i][4] +
                                               taxaBanho*tabelaHorarios[i][3];


                        if(i == 0)
                            quadroProducao[i][1] = 0;
                        else
                            if(quadroProducao[i-1][4] < 0)
                                quadroProducao[i][1] = 0;
                            else
                                quadroProducao[i][1] = quadroProducao[i-1][4];

                        quadroProducao[i][4] = quadroProducao[i][1]+quadroProducao[i][2]-quadroProducao[i][3];
                    }
                    /*
                    for(int i = 0; i < quadroProducao.length; i++){
                        for(int j = 0; j < 5; j ++)
                            System.out.print(quadroProducao[i][j]+" ");
                        System.out.println("");
                    }
                    int qtdPeriodos;
                    if(quadroProducao.length < 3)
                        qtdPeriodos = quadroProducao.length;
                    else
                        qtdPeriodos = 3;
                    */

                    double maior = quadroProducao[0][1], menor = quadroProducao[0][4];
                    
                    for(int i = 1; i < quadroProducao.length; i++){
                        if(quadroProducao[i][1] > maior)
                            maior = quadroProducao[i][1];
                        if(quadroProducao[i][4] < menor)
                            menor = quadroProducao[i][4];
                    }
                    
                    V2 = maior;
                    if(menor < 0)
                        V2 -= menor;

                    //System.out.println("maior "+maior);
                    //System.out.println("menor "+menor);

                    Dg = Di + 0.1; //diâmetro do gasômetro
                    r = 0.5 * Dg * 100; //raio do gasometro 
                    h2 = (4 * V2) / (Math.PI * Dg * Dg);
                    h2 *= 1.1; //reforço 10% para o gasometro comportar o volume de biogas
                    h1 = 0.15; //altura ociosa
                    V1 = (Math.PI * (Dg * Dg) * h1) / 4;
                    Vg = V1 + V2;
                    p = 0.015;
                    Pg = (Math.PI * p *(Dg * Dg * 100 * 100)) / 4;//0.015 pressão máxima para o funcionamento normal dos aparelhos


                    h = H - h2;
                    esp = 0.24; //espessura de um tijolo revestido, referente a parede divisória
                    Vp = h * Di * esp;
                    Vr = Vb - Vp;

                    //Limitar-se-a a indicar estas medidas por julgarmos desnecessários maiores detalhes
                    //Ortolani /\
                    E = (p * r) / tensao;
                    a = 0.5;
                    b = 0.15;//altura da parede do biodigestor acima do nível do substrato
                    e2 = 0.3;
                    Ds = Dg + 0.1;
                    n = valores[0];
                    
                    De = Di + 2 * esp; //parede de 1 tijolo e 0.24 = espessura
                    Db = De + 0.2;
                    
                    v = V / n; //v = V/n... n = dias. Nesse caso 1

                    if(resultados == null)
                    {
                        resultados = new Resultados();
                        resultados.janelaDados = this;
                        resultados.setLocationRelativeTo(null);
                    }
                    
                    resultados.labels[0].setText(String.format("%.2f", Di)+" m");
                    resultados.labels[1].setText(String.format("%.2f", H)+" m");
                    resultados.labels[2].setText(String.format("%.2f", Vb)+" m³");
                    resultados.labels[3].setText(String.format("%.2f", h)+" m");
                    resultados.labels[4].setText(String.format("%.2f", Vp)+" m³");
                    resultados.labels[5].setText(String.format("%.2f", Vr)+" m³");
                    resultados.labels[6].setText(String.format("%.2f", b)+" m");
                    resultados.labels[7].setText(String.format("%.2f", De)+" m");
                    resultados.labels[8].setText(String.format("%.2f", Db)+" m");
                    resultados.labels[9].setText(String.format("%.2f", Dg)+" m");
                    resultados.labels[10].setText(String.format("%.2f", h1)+" m");
                    resultados.labels[11].setText(String.format("%.2f", h2)+" m");
                    resultados.labels[12].setText(String.format("%.2f", V1)+" m³");
                    resultados.labels[13].setText(String.format("%.2f", V2)+" m³");
                    resultados.labels[14].setText(String.format("%.2f", Vg)+" m³");
                    resultados.labels[15].setText(String.format("%.4f", E)+" cm");
                    resultados.labels[16].setText(String.format("%.2f", Pg)+" kgf");
                    resultados.labels[17].setText(String.format("%.2f", Ds)+" m");
                    resultados.labels[18].setText(String.format("%.2f", a)+" m");
                    resultados.labels[19].setText(String.format("%.2f", v)+" m³");
                    resultados.labels[20].setText(String.format("%.2f", e2)+" m");

                    resultados.setVisible(true);

                }
                else
                    javax.swing.JOptionPane.showMessageDialog(null, "Por favor, preencha também os horários das tarefas que utilizam biogás.","Erro de entrada de dados.",javax.swing.JOptionPane.ERROR_MESSAGE);

            }
            else
                javax.swing.JOptionPane.showMessageDialog(null, "Deve haver consumo de biogás para que as dimensões do biodigestor sejam calculadas.","Erro de entrada de dados.",javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        else
            javax.swing.JOptionPane.showMessageDialog(null, "Use apenas números para preencher os dados e use ponto para separar as casas decimais.","Erro de entrada de dados.",javax.swing.JOptionPane.ERROR_MESSAGE);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        entradasTeste();
    }//GEN-LAST:event_jButton3ActionPerformed
    
    Horarios horarios = null;
    Resultados resultados = null;
    int[][] tabelaHorarios = null;
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if(horarios == null)
        {
            horarios = new Horarios();
            horarios.janelaDados = this;
            horarios.setLocationRelativeTo(null);
        }
        horarios.setVisible(true);
        setVisible(false);     
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed
    
    private void atualiza_tabela(){
        int valor = Integer.parseInt(jSpinner1.getValue().toString());
        /*  
            A conversão abaixo não é totalmente segura e foi mantida apenas
            porque não foi encontrada uma solução mais adequada. Não é possível 
            garantir que o TableModel retornado pela função "getModel()" é um 
            DefaultTableModel. Um erro do tipo ClassCastingException pode 
            ocorrer durante a execução se esse programa for compilado com uma 
            versão diferente do Java daquela escolhida para essa implementação 
            (Java 8)
        */
        javax.swing.table.DefaultTableModel modelo = (javax.swing.table.DefaultTableModel) jTable1.getModel();

        while(jTable1.getRowCount() != valor)
            if(jTable1.getRowCount() < valor)
                modelo.addRow(new Object[] {0,0});
            else
                modelo.removeRow( jTable1.getRowCount() - 1 );
    }
    
    private void jSpinner1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner1StateChanged
        atualiza_tabela();
    }//GEN-LAST:event_jSpinner1StateChanged

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed
    
    /*public double[] Testa(){
        OtimizaBiodigestor teste = new OtimizaBiodigestor();
        teste.set_Vb(25);
        teste.set_mi(0.00001);
        
        return teste.Executa_Otimizacao();
    }*/
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater( () -> new Dados().setVisible(true) );
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
